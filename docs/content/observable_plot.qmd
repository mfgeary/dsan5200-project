---
output: html_document
execute:
  echo: false
format:
    html:
        embed_resources: true
---
::: {layout-ncol="2"}
```{ojs}
map = {
  const container = yield htl.html`<div style="height: 500px;">`;
  const map = L.map(container).setView([38.9072, -77.0369], 11);
  L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
    attribution: "Â© <a href=https://www.openstreetmap.org/copyright>OpenStreetMap</a> contributors"
  }).addTo(map);

  L.geoJSON(dc_data, {
    style: function(feature) {
      return {color: colorScale(wardCounts[feature.properties.OBJECTID])};
    },
    onEachFeature: function (feature, layer) {
      layer.on('click', function () {
        const ward = this.feature.properties.OBJECTID;
        mutable selected_ward = ward;
      });
      // Add tooltip
      layer.bindTooltip(`Ward ${feature.properties.OBJECTID}: ${wardCounts[feature.properties.OBJECTID]} car thefts`);
    }
  }).addTo(map);
}
```


```{ojs}
plot = Plot.plot({
  y: {
    grid: true,
  },
  marks: [
    Plot.ruleY([0]),
    Plot.barY(data, {x: "shift", y: "count", sort: {x: "y", reverse: true}})
  ],
  title: `Shift Counts for Ward ${selected_ward}`
})
```

:::

```{ojs}
dc_data = d3.json("https://raw.githubusercontent.com/tsigall/5200-files/main/ACS_Demographic_Characteristics_DC_Ward.geojson")
```


```{ojs}
arrest_data = d3.csv("https://raw.githubusercontent.com/tsigall/5200-files/main/crime_dc.csv")
```

```{ojs}
mutable selected_ward = 1;
```


```{ojs}
wardCounts = arrest_data.reduce((acc, d) => {
  acc[d.ward] = (acc[d.ward] || 0) + 1;
  return acc;
}, {});
```


```{ojs}
colorScale = d3.scaleSequential()
  .domain([d3.max(Object.values(wardCounts)), 0])
  .interpolator(d3.interpolateMagma);
```


```{ojs}
shiftCounts = arrest_data.filter(d => d.ward == selected_ward).reduce((acc, d) => {
  acc[d.shift] = (acc[d.shift] || 0) + 1;
  return acc;
}, {});
```


```{ojs}
data = Object.entries(shiftCounts).map(([shift, count]) => ({shift, count}));
```